{"version":3,"sources":["components/DishdetailComponent.js","components/MenuComponent.js","shared/dishes.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["DishDetail","props","width","src","this","dish","image","alt","name","description","coment","comments","map","comment","author","Intl","DateTimeFormat","year","month","date","format","Date","parse","className","renderDish","renderComments","Component","Menu","menu","dishes","key","id","onClick","body","DISHES","category","label","price","rating","Main","state","selectedDish","dishId","setState","light","color","href","onDishSelect","filter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32f368d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Media } from 'reactstrap';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\n\nclass DishDetail extends Component {\n\n\trenderDish(props){\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<CardImg width=\"100%\" src={this.props.dish.image} alt={props.name} />\n\t\t\t<CardBody><CardTitle>{props.name}</CardTitle>\n\t\t\t\t<CardText>{props.description}</CardText>\n\t\t\t</CardBody>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\trenderComments(props) {\n\n\t\tconst coment = this.props.dish.comments.map((dish) => {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>{dish.comment}</p>\n\t\t\t\t\t<p>-- {dish.author} , {new Intl.DateTimeFormat('en-us', {year: 'numeric', month: 'short', date:'2-digit'}).format(new Date(Date.parse(dish.date)))}</p>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<h4>Comments</h4>\n\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t<li>{coment}</li>\n\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\trender() {\n\n\t\tif(this.props.dish != null) {\n\t\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-5 m-1\">\n\t\t\t\t\t<Card>{this.renderDish(this.props.dish)}</Card>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-5 m-1\">\n\t\t\t\t{this.renderComments(this.props.dish)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\t\n\t\t}\n\t\telse {\n\t\t\treturn (<div></div>);\n\t\t}\n\t}\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport DishDetail from './DishdetailComponent';\nimport { Card, CardImg, CardImgOverlay, CardTitle } from 'reactstrap';\n\nclass Menu extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\n\t\tconst menu = this.props.dishes.map((dish) => {\n\t\t\treturn (\n\t\t\t\t<div key={dish.id} className=\"col-12 col-md-5 m-1\">\n\t\t\t\t\t<Card onClick={() => this.props.onClick(dish.id)}>\n\t\t\t\t\t\t<CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n\t\t\t\t\t\t<CardImgOverlay body className=\"ml-5\">\n\t\t\t\t\t\t\t<CardTitle>{dish.name}</CardTitle>\n\t\t\t\t\t\t</CardImgOverlay>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{menu}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Menu;","export const DISHES =\n    [\n        {\n        id: 0,\n        name:'Uthappizza',\n        image: 'assets/images/uthappizza.png',\n        category: 'mains',\n        label:'Hot',\n        price:'4.99',\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]                        },\n        {\n        id: 1,\n        name:'Zucchipakoda',\n        image: 'assets/images/zucchipakoda.png',\n        category: 'appetizer',\n        label:'',\n        price:'1.99',\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        },\n        {\n        id: 2,\n        name:'Vadonut',\n        image: 'assets/images/vadonut.png',\n        category: 'appetizer',\n        label:'New',\n        price:'1.99',\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        },\n        {\n        id: 3,\n        name:'ElaiCheese Cake',\n        image: 'assets/images/elaicheesecake.png',\n        category: 'dessert',\n        label:'',\n        price:'2.99',\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\n        comments: [\n            {\n            id: 0,\n            rating: 5,\n            comment: \"Imagine all the eatables, living in conFusion!\",\n            author: \"John Lemon\",\n            date: \"2012-10-16T17:57:28.556094Z\"\n            },\n            {\n            id: 1,\n            rating: 4,\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n            author: \"Paul McVites\",\n            date: \"2014-09-05T17:57:28.556094Z\"\n            },\n            {\n            id: 2,\n            rating: 3,\n            comment: \"Eat it, just eat it!\",\n            author: \"Michael Jaikishan\",\n            date: \"2015-02-13T17:57:28.556094Z\"\n            },\n            {\n            id: 3,\n            rating: 4,\n            comment: \"Ultimate, Reaching for the stars!\",\n            author: \"Ringo Starry\",\n            date: \"2013-12-02T17:57:28.556094Z\"\n            },\n            {\n            id: 4,\n            rating: 2,\n            comment: \"It's your birthday, we're gonna party!\",\n            author: \"25 Cent\",\n            date: \"2011-12-02T17:57:28.556094Z\"\n            }\n        ]\n        }\n    ];","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport { DISHES } from '../shared/dishes';\n\nclass Main extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdishes: DISHES,\n\t\t\tselectedDish: null\n\t\t};\n\t}\n\n\tonDishSelect(dishId) {\n\t\tthis.setState({ selectedDish: dishId});\n\t}\n\n\trender () {\n\t\treturn (\n\t  \t\t<div>\n\t  \t\t\t<Navbar light color=\"success\">\n\t  \t\t\t<div className=\"container\">\n\t  \t\t\t\t<NavbarBrand href=\"/\">Krishna</NavbarBrand>\n\t  \t\t\t</div>\n\t  \t\t\t</Navbar>\n\t  \t\t\t<Menu dishes={this.state.dishes}\n\t  \t\t\t\tonClick={(dishId) => this.onDishSelect(dishId)}/>\n\t  \t\t\t<DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\n\t  \t\t</div>\n  \t\t);\n\t}\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nclass App extends Component {\n\n\trender () {\n\t\treturn (\n\t  \t\t<Main />\n  \t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}